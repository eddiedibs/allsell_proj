"""
Django settings for AllSell_proj project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os
import environ
import json

# Initialise environment variables
env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = str(os.environ.get('DEBUG')) == '1'


if DEBUG:

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'allsell_db',
            'USER' : 'postgres',
            'PASSWORD' : '123456',
            'HOST' : 'localhost',
            'PORT' : '5420',
            }
        }
    ALLOWED_HOSTS = json.loads(os.environ['ALLOWED_HOST'])
    CSRF_TRUSTED_ORIGINS= json.loads(os.environ['CSRF_TRUSTED_ORIGINS'])

    STATICFILES_DIRS = [os.path.join(BASE_DIR, 'allsellapp/static')]

    OPEN_EXCHANGE_RATES_APP_ID = os.environ.get('OPEN_EXCHANGE_RATES_APP_ID')
    OPEN_EXCHANGE_RATES_URL = os.environ.get('OPEN_EXCHANGE_RATES_URL')




# IF DEBUG MODE IS OFF

else:
    pass
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #         'NAME': os.environ.get('POSTGRESQL_DATABASE'),
    #         'USER' : os.environ.get('POSTGRESQL_USER'),
    #         'PASSWORD' : os.environ.get('POSTGRESQL_PASSWORD'),
    #         'HOST' : os.environ.get('POSTGRESQL_HOST'),
    #         'PORT' : os.environ.get('POSTGRESQL_PORT'),
    #         }
    #     }

    # ALLOWED_HOSTS=json.loads(os.environ['ALLOWED_HOST'])
    # CSRF_TRUSTED_ORIGINS=json.loads(os.environ['CSRF_TRUSTED_ORIGINS'])
    # STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'allsellapp.apps.AllsellappConfig',
    'users_allsell.apps.UsersAllsellConfig',
    'products.apps.ProductsConfig',
    'custom_filters.apps.CustomFiltersConfig',
    'cart.apps.CartConfig',
    'api.apps.ApiConfig',

    'crispy_forms',
    'crispy_bootstrap4',
    'rest_framework',
    'djmoney',
    'djmoney.contrib.exchange',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AllSell_proj.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # 'allsellapp.context_processors.base_processors',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'AllSell_proj.wsgi.application'
SECURE_CROSS_ORIGIN_OPENER_POLICY='same-origin-allow-popups'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }




# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/


STATIC_URL = 'static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'




CRISPY_TEMPLATE_PACK = 'bootstrap4'

LOGIN_REDIRECT_URL = 'home_view'
LOGIN_URL = 'login_view'


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EXCHANGE_BACKEND = 'djmoney.contrib.exchange.backends.OpenExchangeRatesBackend'